import React, {Component} from 'react'
import {connect} from 'react-redux'
import R from 'ramda'

import {fetchProductById} from 'actions'
import {getProductById} from 'selectors'

class Product extends Component {
  componentDidMount () {
    this.props.fetchProductById(this.props.params.id)
  }

  renderFields () {
  	const {product} = this.props
  	const columnFields = R.compose(
  		R.toPairs,
  		R.pick([
  			'cpu',
  			'camera',
  			'size',
  			'weight',
  			'display',
  			'battery',
  			'memory'
  		])
  	)(product)
  	console.log('columnFields', columnFields)
  
  return columnFields.map(([key, value]) => (
  	<div className='column' key={key}>
  	  <div className='ab-details-title'>
  	    <p>{key}</p>
  	  </div>
  	  <div className='ab-details-info'>
  	    {value}
  	  </div>
  	</div>
  	))
  }

  renderContent () {
  	const {product} = this.props

  	return (
  		<div className='thumbnail'>
  		  <div className='row'>
  		    <div className='col-md-6'>
  		      <img className='img-thumbnail'
  		           src={product.image}
  		           alt={product.name}
  		      />
  		    </div>
  		    <div className='col-md-6'>
  		      {this.renderFields()}
  		    </div>
  		  </div>
  		  <div className='caption-full'>
  		    <h4 className='pull-right'>${product.price}</h4>
  		    <h4>{product.name}</h4>
  		    <p>{product.description}</p>
  		  </div>
  		</div>
  	)
  }  
  renderSidebar () {
  	return (
  		<div>Sidebar</div>
  	)
  }

  render () {
  	const {product} = this.props
  	console.log('product', this.props.product)
    return (
      <div className='view-container'>
        <div className="container">
          <div className="row">
            <div className="col-md-9">
              {product && this.renderContent()}
            </div>
            <div className="col-md-3">
              {product && this.renderSidebar()}
            </div>
          </div>
        </div>
      </div>
    )
  }
}

const mapStateToProps = state => {
	return {
		product: getProductById(state, state.productPage.id)
	}
}

const mapDispatchToProps = {
  fetchProductById
}

export default connect(mapStateToProps, mapDispatchToProps)(Product)